{"version":3,"sources":["Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTA8BeA,MA1Bf,YAAwD,IAAxCC,EAAuC,EAAvCA,KAAMC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,QAASC,EAAiB,EAAjBA,OAAQC,EAAS,EAATA,OAC1C,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAAQI,IAAKN,EAAOA,MAAOA,IACrC,sBAAKI,UAAU,aAAf,UACI,oBAAIA,UAAU,eAAd,SAA8BJ,IAC9B,oBAAII,UAAU,cAAd,SAA6BL,IAC7B,oBAAIK,UAAU,SAAd,SACKD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OACR,oBAAgBL,UAAU,gBAA1B,SAA4CI,GAAnCC,QAGjB,oBAAGL,UAAU,gBAAb,UAA8BH,EAAQS,MAAM,EAAG,KAA/C,gBC6BDC,G,kNAvCXC,MAAQ,CACJC,WAAW,EACXC,OAAQ,I,EA+BZC,U,sBAAY,8BAAAC,EAAA,sEACgCC,IAAMC,IAAI,yDAD1C,gBACcJ,EADd,EACDK,KAAQA,KAAOL,OACtB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAF3B,2C,4CA7BZ,WACI,MAA8BQ,KAAKT,MAA3BC,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,OACnB,OACI,yBAASV,UAAU,YAAnB,SACKS,EACG,qBAAKT,UAAU,SAAf,SACI,sBAAMA,UAAU,eAAhB,0BAEJ,qBAAKA,UAAU,SAAf,SACKU,EAAOP,KAAI,SAAAe,GACR,OAAO,cAAC,EAAD,CAEHC,GAAID,EAAMC,GACVxB,KAAMuB,EAAMvB,KACZC,MAAOsB,EAAMtB,MACbC,QAASqB,EAAMrB,QACfC,OAAQoB,EAAME,mBACdrB,OAAQmB,EAAMnB,QANTmB,EAAMC,a,+BAevC,WACIF,KAAKN,gB,GAhCKU,IAAMC,YCOTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.aa771159.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport \"./Movie.css\";\n\nfunction Movie({year, title, summary, poster, genres}) {\n    return (\n        <div className=\"movie\">\n            <img src={poster} alt={title} title={title} />\n            <div className=\"movie_data\">\n                <h3 className=\"movie__title\">{title}</h3>\n                <h5 className=\"movie__year\">{year}</h5>\n                <ul className=\"genres\">\n                    {genres.map((genre, index) => \n                        <li key={index} className=\"genres__genre\">{ genre }</li>\n                        )}\n                </ul>\n                <p className=\"movie_summary\">{summary.slice(0, 140)}...</p>\n            </div>\n        </div>\n    );\n}\n\nMovie.propTypes = {\n    // id:         PropTypes.number.isRequired,\n    year:       PropTypes.number.isRequired,\n    title:      PropTypes.string.isRequired,\n    summary:    PropTypes.string.isRequired,\n    poster:     PropTypes.string.isRequired,\n    genres:     PropTypes.arrayOf(PropTypes.string).isRequired\n};\nexport default Movie;","import React from \"react\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport \"./App.css\";\n\nclass App extends React.Component{\n    state = {\n        isLoading: true,\n        movies: []\n    };\n    render() {\n        const { isLoading, movies } = this.state;\n        return (\n            <section className=\"container\">\n                {isLoading ?\n                    <div className=\"loader\">\n                        <span className=\"loader__text\">Loading...</span>\n                    </div> : \n                    <div className=\"movies\">\n                        {movies.map(movie => {\n                            return <Movie\n                                key={movie.id}\n                                id={movie.id}\n                                year={movie.year}\n                                title={movie.title}\n                                summary={movie.summary}\n                                poster={movie.medium_cover_image}\n                                genres={movie.genres}\n                            />\n                        })\n                        }\n                    </div>\n                }\n            </section>\n        );\n    }\n    componentDidMount() {\n        this.getMovies();\n    }\n    getMovies = async () => {\n        const {data : {data: {movies}}} = await axios.get(\"https://yts.mx/api/v2/list_movies.json?sort_by=rating\");\n        this.setState({ movies, isLoading: false });\n    }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}